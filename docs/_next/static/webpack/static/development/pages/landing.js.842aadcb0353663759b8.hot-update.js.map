{"version":3,"file":"static/webpack/static/development/pages/landing.js.842aadcb0353663759b8.hot-update.js","sources":["webpack:///./components/SimpleHorizontalBarChart/SimpleHorizontalBarChart.js"],"sourcesContent":["import React,  { useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport * as d3 from \"d3\";\nimport { keys, entries } from 'd3-collection';\nimport { CHALLENGES_CODES_SHORT } from 'helpers/surveycodes.js';\n\nconst formatValue = x => isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\");\nconst formatPercent = d3.format(\".1%\");\n\n// For wrapping text on the y-axis.\nfunction wrap(text, width) {\n    text.each(function () {\n        var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            lineHeight = 1.1, // ems\n            x = text.attr(\"x\"),\n            y = text.attr(\"y\"),\n            dy = 0, //parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null)\n                        .append(\"tspan\")\n                        .attr(\"x\", x)\n                        .attr(\"y\", y)\n                        .attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(\" \"));\n            if (tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(\" \"));\n                line = [word];\n                d3.select(this).attr(\"y\", y-2)\n                tspan = text.append(\"tspan\")\n                  .attr(\"x\", x)\n                  .attr(\"y\", y)\n                  .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n                  .text(word);\n            }\n        }\n    });\n};\n\nexport default function SimpleHorizontalBarChart(props) {\n  \n  if (props.countrycode === \"\") {\n    return <div></div>;\n  }\n  var data = [];\n  var total = 0;\n  for (const [key, value] of Object.entries(props.data[props.countrycode])) {\n    if (key === \"total\") {\n      total = value;\n    } else {\n      let obj = new Object();\n      obj.key = key;\n      obj.value = value;\n      data.push(obj);\n    }\n  }\n  if (total === 0) {\n    return <div></div>;\n  }\n\n  data = data.sort(function(a, b) {\n    if (a.value > b.value) {\n      return -1;\n    }\n    if (a.value < b.value) {\n      return 1;\n    }\n    return 0;\n  });\n\n  const width = 800;\n  const margin = ({top: 0, right: 50, bottom: 0, left: 150});\n  const height = data.length * 40 + margin.top + margin.bottom;\n\n  for (let row of data) {\n    row.value /= total;\n  }\n\n\tuseEffect(() => {\n\t\td3.select(`#svg${props.id}`)\n\t\t\t.selectAll(\"*\").remove();\n\n    const chart = d3.select(`#svg${props.id}`)\n\t\t\t.attr(\"viewBox\", [0, 0, width, height])\n      .style(\"display\", \"auto\")\n      .style(\"overflow\", \"visible\");\n\n    let tooltip = d3.select(`#body${props.id}`)\n      .append(\"div\")\n      .style(\"position\", \"absolute\")\n      .style(\"text-align\", \"center\")\n      .style(\"z-index\", \"10\")\n      .style(\"padding\", \"2px\")\n      .style(\"font\", \"12px sans-serif\")\n      .style(\"background\", \"lightsteelblue\")\n      .style(\"border\", \"0px\")\n      .style(\"border-radius\", \"8px\")\n      .style(\"pointer-events\", \"none\");\n\n    // Three tooltip helper functions\n    let mouseover = function(event, d) {\n      tooltip\n        .style(\"visibility\", \"visible\");\n    }\n    let mousemove = function(event, d) {\n      tooltip\n        .text(d.key + \": \" + d.value.toFixed(2))\n        .style(\"transform\", `translate(${event.offsetX}px, ${event.offsetY - chart.node().getBoundingClientRect().height}px)`)\n        .style(\"visibility\", \"visible\");\n    }\n    let mouseleave = function(d) {\n      tooltip\n        .transition()\n        .duration(200)\n        .style(\"visibility\", \"hidden\");\n    }\n\n    const color = d3.scaleOrdinal()\n      .domain(data.map(function(d) { return d.key; }))\n      .range(d3.quantize(d3.interpolateHcl(\"#60c96e\", \"#4d4193\"), data.map(function(d) { return d.key; }).length))\n      .unknown(\"#ccc\");\n\n    let x = d3.scaleLinear()\n      .domain([0,1])\n      .range([margin.left, width - margin.right]);\n\n    chart.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(width / 100, \"%\"))\n      .selectAll(\"text\")\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"font-size\", '1.5em');\n\n    let y = d3.scaleBand()\n      .domain(data.map(function(d) { return d.key; }))\n      .range([ margin.top, height - margin.bottom ])\n      .padding(.08);\n\n    chart.append(\"g\")\n      .call(d3.axisLeft(y))\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .selectAll(\".tick text\")\n      .attr(\"font-size\", '1.5em')\n      .call(wrap, 300);\n\n    chart.selectAll(\"myRect\")\n\t    .data(data)\n\t    .enter()\n\t    .append(\"rect\")\n\t    .attr(\"x\", x(0) )\n\t    .attr(\"width\", function(d) { return x(d.value) - x(0); })\n      .attr(\"y\", function(d) { return y(d.key); })\n\t    .attr(\"height\", y.bandwidth() )\n\t    //.attr(\"fill\", \"#69b3a2\")\n      .attr(\"fill\", d => color(d.key))\n      .on(\"mouseover\", mouseover )\n      .on(\"mousemove\", mousemove )\n      .on(\"mouseleave\", mouseleave );\n    });\n\n\treturn (\n    <div id={\"body\"+props.id}>\n      <svg className={\"horizontalBarChart\"} id={\"svg\"+props.id} viewBox={[0, 0, width, height]}/>\n    </div>\n\t    );\n\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AANA;AAAA;AAAA;AASA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AADA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAlCA;AAAA;AACA;AADA;AAmCA;AAAA;AACA;AACA;AArCA;AAAA;AAAA;AAAA;AAAA;AACA;AAsCA;AACA;AAGA;AAKA;AACA;AAYA;AACA;AAEA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAIA;AAQA;AACA;AAAA;AAIA;AAOA;AAKA;AAAA;AACA;AAAA;AANA;AASA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;;;;A","sourceRoot":""}